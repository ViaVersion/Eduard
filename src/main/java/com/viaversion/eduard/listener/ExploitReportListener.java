package com.viaversion.eduard.listener;

import com.viaversion.eduard.ViaEduardBot;
import net.dv8tion.jda.api.entities.Guild;
import net.dv8tion.jda.api.entities.Member;
import net.dv8tion.jda.api.entities.Role;
import net.dv8tion.jda.api.entities.channel.concrete.TextChannel;
import net.dv8tion.jda.api.entities.channel.concrete.ThreadChannel;
import net.dv8tion.jda.api.events.interaction.component.ButtonInteractionEvent;
import net.dv8tion.jda.api.hooks.ListenerAdapter;

public final class ExploitReportListener extends ListenerAdapter {

    private final ViaEduardBot bot;

    public ExploitReportListener(final ViaEduardBot bot) {
        this.bot = bot;
    }

    @Override
    public void onButtonInteraction(final ButtonInteractionEvent event) {
        if (!event.getComponentId().equals("report_exploit")) {
            return;
        }

        final TextChannel channel = (TextChannel) event.getChannel();

        final Member user = event.getMember();
        final Guild guild = event.getGuild();
        if (user == null || guild == null) {
            return;
        }

        for (final ThreadChannel threadChannel : channel.getThreadChannels()) {
            if (threadChannel.getName().startsWith("exploit-report-" + user.getEffectiveName())) {
                event.reply(String.format(bot.getExploitDuplicate(), threadChannel.getAsMention())).setEphemeral(true).queue();
                return;
            }
        }

        event.deferEdit().queue();
        channel.createThreadChannel("exploit-report-" + user.getEffectiveName(), true).queue(thread -> {
            thread.addThreadMember(user).queue();
            thread.sendMessage(String.format(bot.getExploitWelcome(), user.getAsMention())).queue();

            final Role maintainerRole = guild.getRoleById(this.bot.getMaintainerRoleId());
            if (maintainerRole == null) {
                return;
            }

            final TextChannel botChannel = guild.getTextChannelById(bot.getBotChannelId());
            if (botChannel != null) {
                botChannel.sendMessage(String.format(bot.getExploitMaintainerMention(), maintainerRole.getAsMention())).queue();
            }
        });
    }

}
