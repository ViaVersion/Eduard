package com.viaversion.eduard.listener;

import com.viaversion.eduard.ViaEduardBot;
import com.viaversion.eduard.util.StringUtil;
import net.dv8tion.jda.api.entities.Guild;
import net.dv8tion.jda.api.entities.Member;
import net.dv8tion.jda.api.entities.channel.concrete.TextChannel;
import net.dv8tion.jda.api.events.interaction.component.ButtonInteractionEvent;
import net.dv8tion.jda.api.hooks.ListenerAdapter;
import net.dv8tion.jda.api.interactions.components.buttons.Button;

public final class ExploitReportListener extends ListenerAdapter {

    private final ViaEduardBot bot;

    public ExploitReportListener(final ViaEduardBot bot) {
        this.bot = bot;
    }

    @Override
    public void onButtonInteraction(final ButtonInteractionEvent event) {
        final String id = event.getComponentId();
        if (id.equals("report_exploit")) {
            event.reply("Are you sure you want to open a private exploit report thread?")
                .setEphemeral(true)
                .addActionRow(
                    Button.success("report_exploit_confirm", "Confirm"),
                    Button.danger("report_exploit_cancel", "Cancel")
                ).queue();
            return;
        }

        if (id.equals("report_exploit_cancel")) {
            event.reply("Report cancelled.").setEphemeral(true).queue();
            return;
        }

        if (!id.equals("report_exploit_confirm")) {
            return;
        }

        final TextChannel channel = (TextChannel) event.getChannel();

        final Member user = event.getMember();
        final Guild guild = event.getGuild();
        if (user == null || guild == null) {
            return;
        }

        event.deferEdit().queue();
        channel.createThreadChannel(StringUtil.randomName(channel), true).queue(thread -> {
            thread.addThreadMember(user).queue();
            thread.sendMessage(String.format(bot.getExploitWelcome(), user.getAsMention())).queue();

            final TextChannel notifyChannel = guild.getTextChannelById(bot.getStaffExploitChannelId());
            if (notifyChannel != null) {
                notifyChannel.sendMessage("A new exploit report has been created: " + thread.getAsMention()).queue();
            }
        });
    }

}
